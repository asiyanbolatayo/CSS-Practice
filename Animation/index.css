.box-wrapper {
    border: 2px dashed red;
    height: 80px;
    width: 80px;
  }
  
  .box {
    background-color: blue;
    /* transform: translate(100%, 20px); */
    /* transform: rotate(240deg); */
    transform: rotate(3turn);
    transform: skew(21deg);
    transform-origin: right top;
    height: 60px;
    width: 60px;
  }

  .box1 {
    width: 60px;
    height: 60px;
    background-color: blue;
  }
  /* This means that element should be 2x as big as it would nomally be. */
  .box2 {
    transform: scale(2);
    width: 60px;
    height: 60px;
    /* transform: rotate(0.75turn); */
    transform: rotate(206deg);
    transform-origin: right top;
    background-color: blue;
  }
  /* This means that element should be 1/2 as small as it would nomally be. */
  .box3 {
    transform: scale(0.5);
    width: 60px;
    height: 60px;
    background-color: blue;
  }

  .one {
    transform: translateX(200px) rotate(135deg);
    width: 60px;
    height: 60px;
    background-color: blue;
  }
  .two {
    transform: rotate(350deg) translateX(200px);
    width: 60px;
    height: 60px;
    background-color: green;
  }
  .original{
    width: 60px;
    height: 60px;
    /* transform: translateX(50px) rotate(150deg); */
    transform: rotate(360deg) translate(187px);
    background-color: yellow;
  }

  .container {
    transform: skew(21deg);
  }

  .btn {
    transition:
      transform 250ms,
      opacity 400ms;
  }
  
  .btn:hover {
    transform: scale(1.2);
    opacity: 0;
  }

  @keyframes float-in {
    from {
      transform: rotate(-50deg) translate(167px);
      opacity: 1;
    }
  }
  /* 
  the float-in is the @keyframes name while the 1000ms is the animation-duration */
  .container {
    animation: fancy-spin 3000ms;
    animation-timing-function: ease-in-out;
    animation-iteration-count: 3;
    animation-fill-mode: forwards;
  animation-delay: 1s;
    width: 100px;
    height: 100px;
    background-color: yellow;
  }

  /*Multi-step animation */
  @keyframes fancy-spin {
    0% {
      transform: rotate(0turn) scale(1);
    }
    40% {
      transform: rotate(1turn) scale(1.5);
    }
    80% {
      transform: rotate(1turn) scale(1.5);
    }
    100% {
      transform: rotate(0turn) scale(1);
    }
  }

  @keyframes grow-and-shrink {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.5);
    }
    100% {
      transform: scale(1);
    }
  }